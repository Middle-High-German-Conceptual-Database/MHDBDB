server {
    listen       9000;
    server_name  localhost;
    
    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the XQ scripts to BaseX listening on 127.0.0.1:80
    #
#    location ~ (?:xq)/.*\.*$ {
    #location /xq/ {
    #    resolver 127.0.0.11 ipv6=off valid=30s;
    #    set $upstream_1 basex-mhdbdb;

    #    if ($request_uri ~* "/(.*)") {
    #       proxy_pass http://$upstream_1:8984/$1;
    #    }

    #    proxy_set_header        X-Forwarded-Host $host;
    #    proxy_set_header        X-Forwarded-Port $server_port;
    #    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    #    proxy_set_header        X-Forwarded-Path /;
    #    proxy_set_header        X-Forwarded-Proto $scheme;

    #    proxy_redirect          http://$upstream_1:8984 http://localhost/xq;
    #}

    #location ~ /xq {
    #    resolver 127.0.0.11 ipv6=off valid=30s;
    #    set $upstream_1 basex-mhdbdb;

    #    rewrite ^/xq(.*) /$1 break;
        
        #if ($request_uri ~* "/(.*)") {
    #       proxy_pass http://$upstream_1:8984;
        #} 

        #proxy_set_header        X-Forwarded-Host $host;
        #proxy_set_header        X-Forwarded-Port $server_port;
        #proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        #proxy_set_header        X-Forwarded-Path /;
        #proxy_set_header        X-Forwarded-Proto $scheme;

        #proxy_redirect          http://$upstream_1:8984 http://localhost/xq;
    #}

     #location ~ /xq {
     #   resolver 127.0.0.11 ipv6=off valid=30s;
     #   set $upstream_2 141.201.70.25;

     #   rewrite ^/xq/?(.*)$ /exist/apps/ebner-online-test/$1 break;

     #   proxy_set_header        X-Forwarded-Host $host;
     #   proxy_set_header        X-Forwarded-Port $server_port;
     #   proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
     #   proxy_set_header        X-Forwarded-Path /;
     #   proxy_set_header        X-Forwarded-Proto $scheme;

     #   proxy_pass http://$upstream_2:8088;
    # }

    # proxy the api ...
    #location /services/ {
    #    proxy_pass http://localhost:3000;
    #    proxy_http_version 1.1;
    #    proxy_set_header Upgrade $http_upgrade;
    #    proxy_set_header Connection 'upgrade';
    #    proxy_set_header Host $host;
    #    proxy_cache_bypass $http_upgrade;
    #}

    

    location /api {
        proxy_pass http://backend:8081;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location /repositories/dhPLUS {
        proxy_pass http://graphdb:7200;
        proxy_pass_request_headers      on;
        proxy_set_header  Authorization $http_authorization;
        proxy_pass_header Authorization;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_buffering off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
    }

    location /showTei {
        proxy_pass http://backend:8081;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location /showTeiAsHtml {
        proxy_pass http://backend:8081;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location /loading {
        proxy_pass http://backend:8081;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }


    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}